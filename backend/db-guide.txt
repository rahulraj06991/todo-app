
Run this in your project directory:

npm install mongodb

â¸»

2. Create a helper file (e.g., mongoClient.js):

// mongoClient.js
const { MongoClient } = require('mongodb');

// Replace with your actual MongoDB URI
const uri = 'mongodb://localhost:27017'; 
const dbName = 'yourDatabaseName';

let client;
let db;

async function connectToMongo() {
  if (db) return db; // Return existing connection

  try {
    client = new MongoClient(uri, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    await client.connect();
    db = client.db(dbName);
    console.log('Connected to MongoDB');
    return db;
  } catch (err) {
    console.error('MongoDB connection error:', err);
    throw err;
  }
}

function closeConnection() {
  if (client) {
    client.close();
    console.log('MongoDB connection closed');
  }
}

module.exports = {
  connectToMongo,
  closeConnection,
};

3. Usage Example (e.g., in app.js or a route file):

const { connectToMongo } = require('./mongoClient');

async function run() {
  const db = await connectToMongo();
  const collection = db.collection('yourCollectionName');
  
  const docs = await collection.find().toArray();
  console.log(docs);
}

run();


////
app.js


const express = require('express')
const  bodyParser = require('body-parser');

const todoRoutes = require('./routes/todos');

// const connect = require('./helpers/db');

// await connect();
const cors = require('cors');


const app = express();

app.use(bodyParser.json());

app.use((req, res, next) => {
    console.log('some middleware');
    next();
})

// app.use(async (req, res, next) => {
//     res.setHeader('Access-Control-Allow-Origin', '*');
//     res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
//     res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
//     await next()
//   });

app.options('*', cors());
app.use(cors());

app.use(todoRoutes);

app.listen(8000);